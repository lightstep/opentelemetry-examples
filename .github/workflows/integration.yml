name: Run integration test

on:
  pull_request:

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: .github/filters.yaml
    - name: Validate config is up-to-date
      if: steps.changes.outputs.code-examples == 'true'
      run: ./tools/precommit.sh

  test:
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: .github/filters.yaml
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      if: steps.changes.outputs.code-examples == 'true'
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Update configuration
      env:
        TOKEN: ${{ secrets.TOKEN }}
        ORG_NAME: ${{ secrets.ORG_NAME }}
        PROJECT_NAME: examples
        API_KEY: ${{ secrets.API_KEY }}
      if: steps.changes.outputs.code-examples == 'true'
      run: ./tools/update-token.sh

    - name: Pull images
      if: steps.changes.outputs.code-examples == 'true'
      run: docker-compose pull

    # - name: Build images
    #   if: steps.changes.outputs.code-examples == 'true'
    #   run: docker-compose build --parallel

    - name: Test??
      if: steps.changes.outputs.code-examples == 'true'
      run: docker-compose up py-opentelemetry-auto-collector-client
      
    - name: Run integration test
      if: steps.changes.outputs.code-examples == 'true'
      run: docker-compose up --exit-code-from integration-test integration-test
